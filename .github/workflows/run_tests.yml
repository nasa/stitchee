# This workflow will install Python dependencies, run tests,
# and report test results and code coverage as artifacts. It will
# be called by the workflow that run tests against new PRs and as
# a first step in the workflow that publishes new Docker images.

name: A reusable workflow to build and run the unit test suite

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.4.0
        with:
          poetry-version: 1.3.2

      - name: Install package
        run: poetry install

      - name: Run linting
        run: |
          poetry run ruff concatenator

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest tests/test_group_handling.py >& test_results.txt
        # TODO: expand tests to include full concatenation runs, i.e., don't just run test_group_handling.py

      - name: Generate coverage report
        if: ${{ always() }}
        run: |
          poetry run coverage report -m >& coverage_report.txt
          poetry run coverage html --dir htmlcov

      - name: Archive test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test result
          path: test_results.txt

      - name: Archive code coverage report (plain text)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: code coverage report (plain text)
          path: coverage_report.txt

      - name: Archive code coverage report (HTML)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: code coverage report (HTML)
          path: htmlcov/*
